#!/bin/bash

set -e -u

HELP=$(cat <<EOH

Usage: $0 [--only <index-name>]...

Rebuild search index(es) from database.

Options:
  --only <index-name>   Rebuild search index only with name in:
                        annotation area artist cdstub editor event
                        instrument label place recording release
                        release-group series tag url work

By default, rebuild all search indexes.
EOH
)

reindex_command="python -m sir -d reindex${reindex_params}"
if [[ $# == 2 ]]; then
    if [ "x$1" = "x--only" ]; then
        reindex_command="${reindex_command} --entity_type $2"
    else
        echo "$0: unrecognized option '$1'"
        echo "$HELP"
        exit 64
    fi
elif [[ $# != 0 ]]; then
    echo "$0: unsupported number of arguments: $#"
    echo "$HELP"
    exit 64
fi

echo -n "Press ENTER to erase current seach indexes (if any) and build new indexes or type ^C to abort"
read dummy

cd /home/vagrant/musicbrainz/musicbrainz-docker

mountpoint=`docker volume inspect musicbrainz-docker_indexdata -f '{{ .Mountpoint}}'`
if ! [[ "$mountpoint" =~ .*indexdata.* ]]; then
    echo Error: indexdata volume mountpoint not found
    exit 1
fi
if [ $(sudo ls -1AU "$mountpoint"/ | wc -l) -ne 0 ]; then
    echo `date`: Removing old indexes
    sudo rm -fr "$mountpoint"/*
fi

echo `date`: Building indexes

reindex_logfile=/home/vagrant/musicbrainz/sir-reindex-debug.log
docker-compose \
  -f /home/vagrant/musicbrainz/musicbrainz-docker/docker-compose.yml \
  run indexer $reindex_command 2>&1 >"$reindex_logfile"

# containers=( `docker ps -q -f 'name=indexer_run'` )
# if [ ${#containers[@]} -ne 0 ]; then
#   docker stop ${containers[@]}
# fi

echo `date`: Building indexes complete
